*pi_paren.txt*  For Vim version 8.2.  Last change: 2013 May 08


		  VIM REFERENCE MANUAL    by Bram Moolenaar


Highlighting matching parens			*matchparen*

The functionality mentioned here is a |standard-plugin|.
This plugin is only available if 'compatible' is not set.

You can avoid loading this plugin by setting the "loaded_matchparen" variable: >
	:let loaded_matchparen = 1

The plugin installs autocommands listening to various events including
CursorMoved, CursorMovedI and WinEnter to update the highlighting.

							*:MatchParen*
					*:NoMatchParen* *:DoMatchParen*
To disable the plugin after it was loaded use this command: >

	:MatchParen off

To enable it again: >

	:MatchParen on

To toggle it: >

	:MatchParen toggle

For backwards compatibility, :NoMatchParen and :DoMatchParen are also available
to respectively disable and enable the plugin.  If you don't want them to be
installed, add this into your vimrc: >

	let g:matchparen_config = #{
	  \ compatible: v:false,
	  \ }

And if you don't want the plugin to highlight matching characters immediately
on startup, add this into your vimrc: >

	let g:matchparen_config = #{
	  \ on_startup: v:false,
	  \ }

You will still be able to enable the highlighting later with `:MatchParenOn`.

The highlighting group used is MatchParen.  You can specify different colors
with the ":highlight" command.  Example: >

	:hi MatchParen ctermbg=blue guibg=lightblue

The characters to be matched come from the 'matchpairs' option.  You can
change the value to highlight different matches.  Note that not everything is
possible.  For example, you can't highlight single or double quotes, because
the start and end are equal.

The syntax highlighting attributes are used.  When the cursor currently is not
in a string or comment syntax item, then matches inside string and comment
syntax items are ignored.  Any syntax items with "string" or "comment"
somewhere in their name are considered string or comment items.
If this causes a noticeable slowdown, it can be disabled by setting
`g:matchparen_config.syntax_ignored` to `v:true`.

The search is limited to not cause lag when moving the cursor.  The limits
are:
- What is visible in the window.
- A timeout of 300 msec (60 msec in Insert mode). This can be changed with the
  `timeout` and `timeout_insert` keys in g:matchparen_config or its
  buffer-local equivalent b:matchparen_config.  For backwards compatibility,
  you can also set the variables g:matchparen_timeout,
  g:matchparen_insert_timeout, and their buffer-local equivalents
  b:matchparen_timeout and b:matchparen_insert_timeout.

The plugin can be entirely configured with the dictionary variable
g:matchparen_config, and its buffer-local equivalent b:matchparen_config: >

	let g:matchparen_config = #{
	  \ timeout: 300,
	  \ timeout_insert: 60,
	  \ syntax_ignored: v:false,
	  \ on_startup: v:true,
	  \ compatible: v:true,
	  \ }

In case of a conflict between the value of a key in the global dictionary and
the value of the same key in the buffer-local dictionary, the latter has
priority.

If you would like the |%| command to work better, the matchit plugin can be
used, see |matchit-install|.  This plugin also helps to skip matches in
comments.  This is unrelated to the matchparen highlighting, they use a
different mechanism.

Credits:
itchyny for the idea of caching the parsing of 'matchpairs' to optimize the
performance:  https://github.com/itchyny/vim-parenmatch

==============================================================================
 vim:tw=78:ts=8:noet:ft=help:norl:
